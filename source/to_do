/* ***************************************************
typedef struct mutex                                 |
{                                                    |
	pthread_mutex_t	output;                          |     
	pthread_mutex_t	*forks;                          |     
}					t_mutex;                         |      
													 |
typedef struct data                                  |
{                                                    |
	long	start_time;                              | 
	int		dead;                                    |
	int		nb_of_philo;                             |  
	int		time_to_die;                             |  
	int		time_to_eat;                             |  
	int		time_to_sleep;                           |    
	int		nb_of_meals;                             |  
}			t_data;                                  |
													 |
typedef struct philo                                 |
{													 |
	int				philo_id;                        |       
	int				eat_count;                       |        
	long			last_meal;                       |        
	t_data			*args;                           |    
	t_mutex			*mutex;                          |     
	pthread_t		thread;                          |     
	pthread_mutex_t	*right_fork;                     |         
	pthread_mutex_t	*left_fork;                      |         
}					t_philo;                         |     
													 |
typedef struct all                                   |
{													 |
	t_mutex		*lock;                               |
	t_philo		*philo;                              |
	t_data		*data;                               |
}				t_all;                               | 
******************************************************
*/

//./philo <philo_nb> <time_die> <time_eat> <time_slp> [ <must_eat> ]
/*./philo 4 410 200 200
          +-|---|---|-- philo_nb
            +---|---|-- time_die
                +---|-- time_eat
                    +-- time_slp*/
//**************** Minimum time_die for EVEN philo_nb ****************
//	2 x time_eat + e

//**************** Minimum time_die for ODD philo_nb ****************
/*if time_eat >= time_slp

	3 * time_eat + e

if time_eat < time_slp

	time_eat + time_slp + e

420 200 -> 10:45 11:00 14 -> down 

*/


/*
int    if_dead(t_philo *philo)
{
    long    time;

    time = current_time() - philo->last_meal;
    if (time > philo->args->time_to_die)
    {
        pthread_mutex_lock(&philo->mutex->output);
        printf("%ld\tThe philo %d is dead\n",
            current_time() - philo->args->start_time, philo->philo_id);
        philo->args->dead = 1;
        return (1);
    }
    return (0);
}

int    check_death(t_all *info)
{
    int    i;
    int    count_meals;

    while (1)
    {
        i = 0;
        count_meals = 0;
        while (i < info->data->nb_of_philo)
        {
            if (if_dead(&info->philo[i]))
                return (1);
            count_meals += info->philo[i].eat_count;
            i++;
        }
        if (count_meals == 0)
        {
            pthread_mutex_lock(&info->lock->output);
            return (1);
        }
    }
    return (0);
}
*/